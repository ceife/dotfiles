snippet listener "alvo.addEventListener(type,listener[, options])"
	${1:document}.addEventListener('${2:click}', ${3:function});
snippet selector "document.querySelector('#id')"
	${1:document}.querySelector('${2:#id}');
snippet constm "const { ... } = module" 
	const { $0 } = $1;

snippet ? "condition ? true : false" 
	${1:condition} ? ${2:true} : ${3:false}

snippet "^try" "try catch" rbA
	try {
		${1:// ...}
	} catch (err) {
		${0:// ...}
	}

snippet function "function (){...}"
	function ${1:nome}(){
		${0:// ...}
	}

snippet if "if() { ... }" rbA
	if (${1:condition}) {
		${0:// ...}
	}

snippet log "console.log(...)"
	console.log(${1});

snippet assert "console.assert(...)"
	console.assert(${1}, ${2});

snippet req "require('...')"
	require('$0');

# const ${1/(.+\/)*(\w+)(-|\b|$)(\..+$)?/$2/g}$0 = require('$1');
snippet creq "const ... = require('...')"
	const ${1:Lib} = require('${2:$1}')

snippet imp "import ... from ..."
	import ${1:Lib} from '${2:$1}'

snippet mod "module.exports = ..."
	module.exports = $0

###################################
# express
###################################
snippet eapp "const app = express()"
	const ${0:app} = express();

snippet erouter "const router = express.Router()"
	const ${1:routes} = ${0:express}.Router();

snippet eget "routes.get('/', ...)"
	${1:routes}.get('${2:/}', $0);

snippet epost "routes.post('/', ...)"
	${1:routes}.post('${2:/}', $0);

snippet edel "routes.delete('/', ...)"
	${1:routes}.delete('${2:/}', $0);

snippet eput "routes.put('/', ...)"
	${1:routes}.put('${2:/}', $0);

snippet elis "app.listen(3333)"
	${0:app}.listen(3333);

###################################
# mongoose
###################################
snippet mcon "mongoose.connect"
	${1:mongoose}.connect('$0', {
		useNewUrlParser: true
	});

snippet msch "mongoose.Schema"
	const ${1:Class}Schema = ${2:mongoose}.Schema({
		${0:Nome: String,}
	}${2:, {
		// created at
		// updated at
		timestamps: true
	}});
